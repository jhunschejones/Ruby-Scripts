#!/bin/zsh

# allow users to pass in a custom .env file, i.e. `./bin/run ./tmp/.env2`
CUSTOM_ENV_FILE_PATH=$1
DEFAULT_ENV_FILE_PATH=./tmp/.env
ENV_FILE_PATH="${CUSTOM_ENV_FILE_PATH:-$DEFAULT_ENV_FILE_PATH}"

# load in environment variables in env file if it exists
[ -f $ENV_FILE_PATH ] && . $ENV_FILE_PATH

# if PCLOUD_FOLDER_PATH isn't set, bail early
if [[ ! -n "${PCLOUD_FOLDER_PATH}" ]]; then
    echo "\033[0;31mExiting early: PCLOUD_FOLDER_PATH was not set\033[0m"
  exit 0
fi

# if LOCAL_FOLDER_PATH isn't set, bail early
if [[ ! -n "${LOCAL_FOLDER_PATH}" ]]; then
    echo "\033[0;31mExiting early: LOCAL_FOLDER_PATH was not set\033[0m"
  exit 0
fi

# if PCLOUD_ACCESS_TOKEN isn't set yet, try to set it using 1Password CLI
if [[ ! -n "${PCLOUD_ACCESS_TOKEN}" ]]; then
  op signin
  PCLOUD_ACCESS_TOKEN=$(op item get "pcloud_folder_sync access token" --fields password)
fi

# if PCLOUD_ACCESS_TOKEN still isn't set, bail before running the rest of the script
if [[ ! -n "${PCLOUD_ACCESS_TOKEN}" ]]; then
  echo "\033[0;31mExiting early: PCLOUD_ACCESS_TOKEN was not set\033[0m"
  exit 0
fi

PCLOUD_ACCESS_TOKEN=$PCLOUD_ACCESS_TOKEN \
PCLOUD_FOLDER_PATH=$PCLOUD_FOLDER_PATH \
bundle exec ruby ./lib/main.rb
